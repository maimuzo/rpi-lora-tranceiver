// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: state.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_state_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_state_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_state_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_state_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_state_2eproto;
namespace lora_state {
class State;
class StateDefaultTypeInternal;
extern StateDefaultTypeInternal _State_default_instance_;
}  // namespace lora_state
PROTOBUF_NAMESPACE_OPEN
template<> ::lora_state::State* Arena::CreateMaybeMessage<::lora_state::State>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace lora_state {

// ===================================================================

class State :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:lora_state.State) */ {
 public:
  State();
  virtual ~State();

  State(const State& from);
  State(State&& from) noexcept
    : State() {
    *this = ::std::move(from);
  }

  inline State& operator=(const State& from) {
    CopyFrom(from);
    return *this;
  }
  inline State& operator=(State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const State* internal_default_instance() {
    return reinterpret_cast<const State*>(
               &_State_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(State* other);
  friend void swap(State& a, State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline State* New() const final {
    return CreateMaybeMessage<State>(nullptr);
  }

  State* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<State>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const State& from);
  void MergeFrom(const State& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(State* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "lora_state.State";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_state_2eproto);
    return ::descriptor_table_state_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);

  // required int32 epoch_sec = 2;
  bool has_epoch_sec() const;
  void clear_epoch_sec();
  static const int kEpochSecFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 epoch_sec() const;
  void set_epoch_sec(::PROTOBUF_NAMESPACE_ID::int32 value);

  // required float lat = 3;
  bool has_lat() const;
  void clear_lat();
  static const int kLatFieldNumber = 3;
  float lat() const;
  void set_lat(float value);

  // required float long = 4;
  bool has_long_() const;
  void clear_long_();
  static const int kLongFieldNumber = 4;
  float long_() const;
  void set_long_(float value);

  // optional int32 direction_from_north = 5;
  bool has_direction_from_north() const;
  void clear_direction_from_north();
  static const int kDirectionFromNorthFieldNumber = 5;
  ::PROTOBUF_NAMESPACE_ID::int32 direction_from_north() const;
  void set_direction_from_north(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:lora_state.State)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 epoch_sec_;
  float lat_;
  float long__;
  ::PROTOBUF_NAMESPACE_ID::int32 direction_from_north_;
  friend struct ::TableStruct_state_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// State

// required int32 id = 1;
inline bool State::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void State::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 State::id() const {
  // @@protoc_insertion_point(field_get:lora_state.State.id)
  return id_;
}
inline void State::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
  // @@protoc_insertion_point(field_set:lora_state.State.id)
}

// required int32 epoch_sec = 2;
inline bool State::has_epoch_sec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void State::clear_epoch_sec() {
  epoch_sec_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 State::epoch_sec() const {
  // @@protoc_insertion_point(field_get:lora_state.State.epoch_sec)
  return epoch_sec_;
}
inline void State::set_epoch_sec(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  epoch_sec_ = value;
  // @@protoc_insertion_point(field_set:lora_state.State.epoch_sec)
}

// required float lat = 3;
inline bool State::has_lat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void State::clear_lat() {
  lat_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float State::lat() const {
  // @@protoc_insertion_point(field_get:lora_state.State.lat)
  return lat_;
}
inline void State::set_lat(float value) {
  _has_bits_[0] |= 0x00000004u;
  lat_ = value;
  // @@protoc_insertion_point(field_set:lora_state.State.lat)
}

// required float long = 4;
inline bool State::has_long_() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void State::clear_long_() {
  long__ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float State::long_() const {
  // @@protoc_insertion_point(field_get:lora_state.State.long)
  return long__;
}
inline void State::set_long_(float value) {
  _has_bits_[0] |= 0x00000008u;
  long__ = value;
  // @@protoc_insertion_point(field_set:lora_state.State.long)
}

// optional int32 direction_from_north = 5;
inline bool State::has_direction_from_north() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void State::clear_direction_from_north() {
  direction_from_north_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 State::direction_from_north() const {
  // @@protoc_insertion_point(field_get:lora_state.State.direction_from_north)
  return direction_from_north_;
}
inline void State::set_direction_from_north(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  direction_from_north_ = value;
  // @@protoc_insertion_point(field_set:lora_state.State.direction_from_north)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace lora_state

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_state_2eproto
